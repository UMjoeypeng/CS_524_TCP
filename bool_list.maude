fmod BOOL-LIST is
    protecting LIST{Bool} * (sort NeList{Bool} to NeBoolList ,
                             sort List{Bool} to BoolList ) + INT .
                             
    op _[_] : BoolList Int -> Bool .
    op allTrue : BoolList -> Bool .
    op pop(_,_) : BoolList Int -> BoolList .

    var B : Bool .
    var BL : BoolList .
    var N : Int .

    eq tail(nil) = nil .
    eq head(nil) = nil .
    eq allTrue(B) = if B == true then true else false fi .
    eq allTrue(B BL) = allTrue(B) and allTrue(BL) .

    eq BL [ N ] = if N <= 0 then if N == 0 then head(BL) else nil fi else tail(BL) [ N - 1 ] fi .

    eq pop(BL , N) = if N == 0 then tail(BL) else head(BL) (pop(tail(BL), N - 1)) fi .
endfm