fmod STRING-LIST is
    protecting LIST{String} * (sort NeList{String} to NeStringList ,
                             sort List{String} to StringList ) + INT .
    op mts : -> String [ctor] . 

    op _[_] : StringList Int -> String .
    op pop(_,_) : StringList Int -> StringList .
    op assign(_,_,_) : StringList Int String -> StringList .
    op n_mts : Int -> StringList .

    var S : String . 
    var SL : StringList .
    var N : Int . 
    

    eq tail(nil) = nil .
    eq head(nil) = nil .

    eq SL [ N ] = if N <= 0 then if N == 0 then head(SL) else nil fi else tail(SL) [ N - 1 ] fi .
    eq pop(SL , N) = if N == 0 then tail(SL) else head(SL) (pop(tail(SL), N - 1)) fi .
    eq assign(SL, N, S) = if N < 0 or N >= size(SL) then SL else if N == 0 then S tail(SL) else head(SL) assign(tail(SL), N - 1, S) fi fi .
    eq n_mts(N) = if N <= 0 then nil else mts n_mts(N - 1) fi .
    
endfm